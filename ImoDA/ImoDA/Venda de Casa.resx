<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>