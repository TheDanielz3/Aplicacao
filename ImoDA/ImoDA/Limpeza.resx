<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>